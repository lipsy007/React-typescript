{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\drmga\\\\reacttypsrcipt_app\\\\typescript-react-app\\\\src\\\\components\\\\customer\\\\Create.tsx\";\nimport * as React from 'react';\nimport axios from 'axios';\nimport { withRouter } from 'react-router-dom';\nconst Regex = RegExp(/^\\s?[A-Z0–9]+[A-Z0–9._+-]{0,}@[A-Z0–9._+-]+\\.[A-Z0–9]{2,4}\\s?$/i);\nconst Regmob = RegExp(/^[0-9\\b]+$/);\n\nclass Create extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.processFormSubmission = e => {\n      e.preventDefault();\n      this.setState({\n        loading: true\n      });\n      const formData = {\n        first_name: this.state.first_name,\n        last_name: this.state.last_name,\n        email: this.state.email,\n        phone: this.state.phone,\n        address: this.state.address,\n        password: this.state.description\n      };\n      this.setState({\n        submitSuccess: true,\n        values: [...this.state.values, formData],\n        loading: false\n      });\n      axios.post(`http://localhost:5000/customers`, formData).then(data => [setTimeout(() => {\n        this.props.history.push('/');\n      }, 1500)]);\n    };\n\n    this.handleInputChanges = e => {\n      e.preventDefault();\n      const {\n        name,\n        value\n      } = e.currentTarget;\n      let errors = this.state.errors;\n\n      switch (name) {\n        case 'first_name':\n          errors.first_name = value.length < 5 ? 'Username must be 5 characters long!' : '';\n          break;\n\n        case 'email':\n          errors.email = Regex.test(value) ? '' : 'Email is not valid!';\n          break;\n\n        case 'password':\n          errors.password = value.length < 8 ? 'Password must be eight characters long!' : '';\n          break;\n\n        case 'phone':\n          errors.phone = Regmob.test(value) && value.length !== 10 ? 'Mobile Number is not valid!' : '';\n          break;\n\n        default:\n          break;\n      }\n\n      this.setState(Object.assign(this.state, {\n        errors,\n        [name]: value\n      }));\n      console.log(this.state.errors); //     // this.setState({\n      //     //     [e.currentTarget.name]: e.currentTarget.value,\n      // })\n    };\n\n    this.state = {\n      first_name: '',\n      last_name: '',\n      email: '',\n      phone: '',\n      address: '',\n      password: '',\n      values: [],\n      loading: false,\n      submitSuccess: false,\n      errors: {\n        first_name: '',\n        last_name: '',\n        email: '',\n        phone: '',\n        address: '',\n        password: ''\n      }\n    };\n  }\n\n  render() {\n    const {\n      submitSuccess,\n      loading\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-12 form-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }\n    }, \" Create Post \"), !submitSuccess && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"alert alert-info\",\n      role: \"alert\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 21\n      }\n    }, \"Fill the form below to create a new post\"), submitSuccess && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"alert alert-info\",\n      role: \"alert\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 21\n      }\n    }, \"The form was successfully submitted!\"), /*#__PURE__*/React.createElement(\"form\", {\n      id: \"create-post-form\",\n      onSubmit: this.processFormSubmission,\n      noValidate: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"first_name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 25\n      }\n    }, \" First Name \"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"first_name\",\n      onChange: e => this.handleInputChanges(e),\n      name: \"first_name\",\n      className: \"form-control\",\n      placeholder: \"Enter customer's first name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"last_name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 25\n      }\n    }, \" Last Name \"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"last_name\",\n      onChange: e => this.handleInputChanges(e),\n      name: \"last_name\",\n      className: \"form-control\",\n      placeholder: \"Enter customer's last name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 25\n      }\n    }, \" Email \"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"email\",\n      id: \"email\",\n      onChange: e => this.handleInputChanges(e),\n      name: \"email\",\n      className: \"form-control\",\n      placeholder: \"Enter customer's email address\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"phone\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 25\n      }\n    }, \" Phone \"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"phone\",\n      onChange: e => this.handleInputChanges(e),\n      name: \"phone\",\n      className: \"form-control\",\n      placeholder: \"Enter customer's phone number\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"address\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 25\n      }\n    }, \" Address \"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"address\",\n      onChange: e => this.handleInputChanges(e),\n      name: \"address\",\n      className: \"form-control\",\n      placeholder: \"Enter customer's address\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 25\n      }\n    }, \" password \"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"password\",\n      onChange: e => this.handleInputChanges(e),\n      name: \"password\",\n      className: \"form-control\",\n      placeholder: \"Enter password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group col-md-4 pull-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-success\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 25\n      }\n    }, \"Create Customer\"), loading && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"fa fa-circle-o-notch fa-spin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 29\n      }\n    })))));\n  }\n\n}\n\nexport default withRouter(Create);","map":{"version":3,"sources":["C:/Users/drmga/reacttypsrcipt_app/typescript-react-app/src/components/customer/Create.tsx"],"names":["React","axios","withRouter","Regex","RegExp","Regmob","Create","Component","constructor","props","processFormSubmission","e","preventDefault","setState","loading","formData","first_name","state","last_name","email","phone","address","password","description","submitSuccess","values","post","then","data","setTimeout","history","push","handleInputChanges","name","value","currentTarget","errors","length","test","Object","assign","console","log","render"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport axios from 'axios';\r\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\r\n\r\nconst Regex = RegExp(/^\\s?[A-Z0–9]+[A-Z0–9._+-]{0,}@[A-Z0–9._+-]+\\.[A-Z0–9]{2,4}\\s?$/i);\r\nconst Regmob = RegExp(/^[0-9\\b]+$/);\r\nexport interface IValues {\r\n    first_name: string,\r\n    last_name: string,\r\n    email: string,\r\n    phone: string,\r\n    address: string,\r\n    password: string,\r\n    errors :{\r\n        first_name: string,\r\n        last_name: string,\r\n        email: string,\r\n        mobile: string,\r\n        address: string,\r\n        password: string\r\n    },\r\n}\r\nexport interface IFormState {\r\n    [key: string]: any;\r\n    values: IValues[];\r\n    submitSuccess: boolean;\r\n    loading: boolean;\r\n    name?:any;\r\n    errors:any;\r\n}\r\nclass Create extends React.Component<RouteComponentProps, IFormState> {\r\n    constructor(props: RouteComponentProps) {\r\n        super(props);\r\n        this.state = {\r\n            first_name: '',\r\n            last_name: '',\r\n            email: '',\r\n            phone: '',\r\n            address: '',\r\n            password: '',\r\n            values: [],\r\n            loading: false,\r\n            submitSuccess: false,\r\n            errors : {\r\n                first_name: '',\r\n            last_name: '',\r\n            email: '',\r\n            phone: '',\r\n            address: '',\r\n            password: ''\r\n            }\r\n            \r\n        }\r\n    }\r\n    private processFormSubmission = (e: React.FormEvent<HTMLFormElement>): void => {\r\n        e.preventDefault();\r\n        this.setState({ loading: true });\r\n        const formData = {\r\n            first_name: this.state.first_name,\r\n            last_name: this.state.last_name,\r\n            email: this.state.email,\r\n            phone: this.state.phone,\r\n            address: this.state.address,\r\n            password: this.state.description,\r\n        }\r\n        this.setState({ submitSuccess: true, values: [...this.state.values, formData], loading: false });\r\n        axios.post(`http://localhost:5000/customers`, formData).then(data => [\r\n            setTimeout(() => {\r\n                this.props.history.push('/');\r\n            }, 1500)\r\n        ]);\r\n    }\r\n\r\n    private handleInputChanges = (e: React.FormEvent<HTMLInputElement>) => {\r\n        e.preventDefault();\r\n        const{name , value} = e.currentTarget;\r\n        let errors = this.state.errors;\r\n        switch (name) {\r\n            case 'first_name':\r\n               errors.first_name = value.length < 5 ? 'Username must be 5 characters long!': '';\r\n               break;\r\n            case 'email':\r\n               errors.email = Regex.test(value)? '': 'Email is not valid!';\r\n               break;\r\n            case 'password':\r\n               errors.password = value.length < 8 ? 'Password must be eight characters long!': '';\r\n               break;\r\n            case 'phone':\r\n               errors.phone = Regmob.test(value) && value.length !== 10 ? 'Mobile Number is not valid!': '';\r\n               break;\r\n            default:\r\n              break;\r\n          }\r\n          this.setState(Object.assign(this.state, { errors,[name]: value }));\r\n      console.log(this.state.errors);\r\n    //     // this.setState({\r\n    //     //     [e.currentTarget.name]: e.currentTarget.value,\r\n    // })\r\n}\r\npublic render() {\r\n    const { submitSuccess, loading } = this.state;\r\n    return (\r\n        <div>\r\n            <div className={\"col-md-12 form-wrapper\"}>\r\n                <h2> Create Post </h2>\r\n                {!submitSuccess && (\r\n                    <div className=\"alert alert-info\" role=\"alert\">\r\n                        Fill the form below to create a new post\r\n                </div>\r\n                )}\r\n                {submitSuccess && (\r\n                    <div className=\"alert alert-info\" role=\"alert\">\r\n                        The form was successfully submitted!\r\n                        </div>\r\n                )}\r\n                <form id={\"create-post-form\"} onSubmit={this.processFormSubmission} noValidate={true}>\r\n                    <div className=\"form-group col-md-12\">\r\n                        <label htmlFor=\"first_name\"> First Name </label>\r\n                        <input type=\"text\" id=\"first_name\" onChange={(e) => this.handleInputChanges(e)} name=\"first_name\" className=\"form-control\" placeholder=\"Enter customer's first name\" />\r\n                    </div>\r\n                    <div className=\"form-group col-md-12\">\r\n                        <label htmlFor=\"last_name\"> Last Name </label>\r\n                        <input type=\"text\" id=\"last_name\" onChange={(e) => this.handleInputChanges(e)} name=\"last_name\" className=\"form-control\" placeholder=\"Enter customer's last name\" />\r\n                    </div>\r\n                    <div className=\"form-group col-md-12\">\r\n                        <label htmlFor=\"email\"> Email </label>\r\n                        <input type=\"email\" id=\"email\" onChange={(e) => this.handleInputChanges(e)} name=\"email\" className=\"form-control\" placeholder=\"Enter customer's email address\" />\r\n                    </div>\r\n                    <div className=\"form-group col-md-12\">\r\n                        <label htmlFor=\"phone\"> Phone </label>\r\n                        <input type=\"text\" id=\"phone\" onChange={(e) => this.handleInputChanges(e)} name=\"phone\" className=\"form-control\" placeholder=\"Enter customer's phone number\" />\r\n                    </div>\r\n                    <div className=\"form-group col-md-12\">\r\n                        <label htmlFor=\"address\"> Address </label>\r\n                        <input type=\"text\" id=\"address\" onChange={(e) => this.handleInputChanges(e)} name=\"address\" className=\"form-control\" placeholder=\"Enter customer's address\" />\r\n                    </div>\r\n                    <div className=\"form-group col-md-12\">\r\n                        <label htmlFor=\"password\"> password </label>\r\n                        <input type=\"text\" id=\"password\" onChange={(e) => this.handleInputChanges(e)} name=\"password\" className=\"form-control\" placeholder=\"Enter password\" />\r\n                    </div>\r\n                    <div className=\"form-group col-md-4 pull-right\">\r\n                        <button className=\"btn btn-success\" type=\"submit\">\r\n                            Create Customer\r\n                        </button>\r\n                        {loading &&\r\n                            <span className=\"fa fa-circle-o-notch fa-spin\" />\r\n                        }\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n}\r\nexport default withRouter(Create)"]},"metadata":{},"sourceType":"module"}